diff --git a/drivers/tty/vt/vt.c b/drivers/tty/vt/vt.c
index 62049ceb34de..22e7c2314c70 100644
--- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@ -105,6 +105,7 @@
 #include <linux/kdb.h>
 #include <linux/ctype.h>
 #include <linux/gcd.h>
+#include <linux/kcov.h>
 
 #define MAX_NR_CON_DRIVER 16
 
@@ -155,6 +156,7 @@ static void unblank_screen(void);
 
 #define vt_get_kmsg_redirect() vt_kmsg_redirect(-1)
 
+u64 kcov_handle = 0;
 int default_utf8 = true;
 module_param(default_utf8, int, S_IRUGO | S_IWUSR);
 int global_cursor_default = -1;
@@ -308,6 +310,7 @@ static inline void scrolldelta(int lines)
 	/* scrolldelta needs some kind of consistency lock, but the BKL was
 	   and still is not protecting versus the scheduled back end */
 	scrollback_delta += lines;
+	kcov_handle = current->kcov_handle;
 	schedule_console_callback();
 }
 
@@ -3199,6 +3202,7 @@ static int do_con_write(struct tty_struct *tty, const u8 *buf, int count)
  */
 static void console_callback(struct work_struct *ignored)
 {
+	kcov_remote_start(kcov_handle);
 	console_lock();
 
 	if (want_console >= 0) {
@@ -3230,6 +3234,7 @@ static void console_callback(struct work_struct *ignored)
 	notify_update(vc_cons[fg_console].d);
 
 	console_unlock();
+	kcov_remote_stop();
 }
 
 int set_console(int nr)
@@ -3251,6 +3256,7 @@ int set_console(int nr)
 	}
 
 	want_console = nr;
+	kcov_handle = current->kcov_handle;
 	schedule_console_callback();
 
 	return 0;
